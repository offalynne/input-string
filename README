input-string

Multiplatform GMS2 text entry utility
Robust alternative to keyboard_string

Frontend Features
- Platform entry method hint
- Reliable getter and setter
- Trigger on text submission
- Easy async dialog handling

Backend Features
- Safe handling at string length limit
- Filter errant keyboard control codes
- Normalized Backspace repeat behavior
- Prevent Android off-by-one text bugs
- Prevent dropping any user keystrokes
- Prevent input falling through dialog

Quick Start
1 input_string_trigger_set(submitFunc)
2 Upon focus, input_string_set(oldVal)
2 Focused, newVal = input_string_get()
4 Once a frame, do input_string_tick()

input_string_get()
  function: Get managed text
  returned: String

input_string_set([string])
  function: Set managed text
  argument: String (Optional)
  returned: None

input_string_trigger_set([function])
  function: Set submission trigger
  argument: Function (Optional)
  returned: None

input_string_submit()
  function: Issue submission trigger
  returned: None

input_string_max_length_set(value)
  function: Set string limit
  argument: Value (Integer)
  returned: None

input_string_platform_hint()
  function: Get entry method hint
  returned: String (Hint)
  possible: keyboard, virtual, async

input_string_virtual_submit()
  function: Get virtual return status
  requires: input_​string_​tick
  returned: Boolean

input_string_tick()
  function: Update state
  in event: Begin Step
  returned: None

input_string_async_active()
  function: Get dialog status
  returned: Boolean

input_string_async_get([caption]);
  function: Issue dialog prompt
  requires: input_​string_​async_​event
  argument: Caption (String, Optional)
  returned: None

input_string_async_event()
  function: Manage dialog submission
  in event: Dialog Async (Optional)
  returned: None

For configuration options, see scripts

s/o @JujuAdams @tabularelf @nkrapivin
Community: discord.gg/8krYCqr

@offalynne, 2022
MIT licensed, use as you please
